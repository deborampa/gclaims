%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0
%%For: () ()
%%Title: (20190413-v01-05-paper-holder-with-various-insurance-types-all-options-selected-full-coverage-concept.eps)
%%CreationDate: 04/12/2019 10:10 AM
%%Canvassize: 16383
%%BoundingBox: 0 0 4000 4000
%%HiResBoundingBox: 0 0 4000 4000
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 0.749721 0.679194 0.670497 0.901457 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 2000.5 1999.5 2000.5 1999.5
%AI3_TileBox: 1714.4 1591.16 2285.6 2408.84
%AI3_DocumentPreview: Header
%AI5_ArtSize: 4000 4000
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 1425 2437 1 1157 859 26 0 0 78 120 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:1500 1500
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 0
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (\310\353\353\376\361\362\360\340\366\350\377 Line) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (\310\353\353\376\361\362\360\340\366\350\377 Sketch) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (\322\360\340\361\361\350\360\356\342\352\340 \350\347\356\341\360\340\346\345\355\350\377) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.749721 0.679194 0.670497 0.901457 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(svg10) Ln
0 A
u
U
u
0 O
0.65713 0.005402 0.401587 0 0.290196 0.741176 0.67451 Xa
0 J 0 j 1 w 10 M []0 d
0 XR
0 4000 m
4000 4000 L
4000 0 L
0 0 L
0 4000 L
f
0.777005 0.253208 0.540673 0.04831 0.215686 0.556863 0.505882 Xa
1040 3420 m
3120 3420 L
3142.1599 3420 3160 3402.1599 3160 3380 C
3160 580 L
3160 557.84 3142.1599 540 3120 540 C
1040 540 L
1017.84 540 1000 557.84 1000 580 C
1000 3380 L
1000 3402.1599 1017.84 3420 1040 3420 C
f
0.8327 0.6589 0.43534 0.293767 0.203922 0.286275 0.368627 Xa
960 3500 m
3040 3500 L
3062.1599 3500 3080 3482.1599 3080 3460 C
3080 660 L
3080 637.84 3062.1599 620 3040 620 C
960 620 L
937.84 620 920 637.84 920 660 C
920 3460 L
920 3482.1599 937.84 3500 960 3500 C
f
0 0 0 0 1 1 1 Xa
1000 3300 m
3000 3300 L
3000 700 L
1000 700 L
1000 3300 L
f
*u
1 D
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
1805.4556 2880.0001 m
1802.434 2880.0001 1800 2876.1785 1800 2871.4297 C
1800 2828.5704 L
1800 2823.8217 1802.434 2820 1805.4556 2820 C
2394.5444 2820 L
2397.5659 2820 2400 2823.8217 2400 2828.5704 C
2400 2871.4297 L
2400 2876.1785 2397.5659 2880.0001 2394.5444 2880.0001 C
1805.4556 2880.0001 L
f
1805.4556 2800.0001 m
1802.434 2800.0001 1800 2796.1785 1800 2791.4297 C
1800 2748.5704 L
1800 2743.8217 1802.434 2740 1805.4556 2740 C
2394.5444 2740 L
2397.5659 2740 2400 2743.8217 2400 2748.5704 C
2400 2791.4297 L
2400 2796.1785 2397.5659 2800.0001 2394.5444 2800.0001 C
1805.4556 2800.0001 L
f
1805.4556 2720.0001 m
1802.434 2720.0001 1800 2716.1785 1800 2711.4297 C
1800 2668.5704 L
1800 2663.8217 1802.434 2660 1805.4556 2660 C
2394.5444 2660 L
2397.5659 2660 2400 2663.8217 2400 2668.5704 C
2400 2711.4297 L
2400 2716.1785 2397.5659 2720.0001 2394.5444 2720.0001 C
1805.4556 2720.0001 L
f
1805.4556 2640.0001 m
1802.434 2640.0001 1800 2636.1785 1800 2631.4297 C
1800 2588.5704 L
1800 2583.8217 1802.434 2580 1805.4556 2580 C
2394.5444 2580 L
2397.5659 2580 2400 2583.8217 2400 2588.5704 C
2400 2631.4297 L
2400 2636.1785 2397.5659 2640.0001 2394.5444 2640.0001 C
1805.4556 2640.0001 L
f
1805.4556 2560.0001 m
1802.434 2560.0001 1800 2556.1785 1800 2551.4297 C
1800 2508.5704 L
1800 2503.8217 1802.434 2500 1805.4556 2500 C
2394.5444 2500 L
2397.5659 2500 2400 2503.8217 2400 2508.5704 C
2400 2551.4297 L
2400 2556.1785 2397.5659 2560.0001 2394.5444 2560.0001 C
1805.4556 2560.0001 L
f
*U
0 D
0.152132 0.743496 0.668666 0.023102 0.803922 0.380392 0.333333 Xa
1700 2740.0001 m
1700 2574.3147 1565.6854 2440.0001 1400 2440.0001 c
1234.3146 2440.0001 1100 2574.3147 1100 2740.0001 c
1100 2905.6855 1234.3146 3040.0001 1400 3040.0001 C
1400 3040.0001 L
1565.6854 3040.0001 1700 2905.6855 1700 2740.0001 C
1700 2740.0001 L
f
1803.0304 3040.0001 m
2130.3032 3040.0001 L
2131.9819 3040.0001 2133.3333 3036.1774 2133.3333 3031.4285 C
2133.3333 2988.5713 L
2133.3333 2983.8229 2131.9819 2980.0001 2130.3032 2980.0001 C
1803.0304 2980.0001 L
1801.3516 2980.0001 1800 2983.8229 1800 2988.5713 C
1800 3031.4285 L
1800 3036.1772 1801.3516 3040.0001 1803.0304 3040.0001 C
f
*u
1 D
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
1805.4556 2080.0001 m
1802.434 2080.0001 1800 2076.1785 1800 2071.4297 C
1800 2028.5704 L
1800 2023.8217 1802.434 2020.0001 1805.4556 2020.0001 C
2394.5444 2020.0001 L
2397.5659 2020.0001 2400 2023.8217 2400 2028.5704 C
2400 2071.4297 L
2400 2076.1785 2397.5659 2080.0001 2394.5444 2080.0001 C
1805.4556 2080.0001 L
f
1805.4556 2000.0001 m
1802.434 2000.0001 1800 1996.1785 1800 1991.4297 C
1800 1948.5705 L
1800 1943.8217 1802.434 1940.0001 1805.4556 1940.0001 C
2394.5444 1940.0001 L
2397.5659 1940.0001 2400 1943.8217 2400 1948.5705 C
2400 1991.4297 L
2400 1996.1785 2397.5659 2000.0001 2394.5444 2000.0001 C
1805.4556 2000.0001 L
f
1805.4556 1920.0001 m
1802.434 1920.0001 1800 1916.1785 1800 1911.4297 C
1800 1868.5705 L
1800 1863.8217 1802.434 1860.0001 1805.4556 1860.0001 C
2394.5444 1860.0001 L
2397.5659 1860.0001 2400 1863.8217 2400 1868.5705 C
2400 1911.4297 L
2400 1916.1785 2397.5659 1920.0001 2394.5444 1920.0001 C
1805.4556 1920.0001 L
f
1805.4556 1840.0001 m
1802.434 1840.0001 1800 1836.1785 1800 1831.4297 C
1800 1788.5705 L
1800 1783.8217 1802.434 1780.0001 1805.4556 1780.0001 C
2394.5444 1780.0001 L
2397.5659 1780.0001 2400 1783.8217 2400 1788.5705 C
2400 1831.4297 L
2400 1836.1785 2397.5659 1840.0001 2394.5444 1840.0001 C
1805.4556 1840.0001 L
f
1805.4556 1760.0001 m
1802.434 1760.0001 1800 1756.1785 1800 1751.4297 C
1800 1708.5705 L
1800 1703.8217 1802.434 1700.0001 1805.4556 1700.0001 C
2394.5444 1700.0001 L
2397.5659 1700.0001 2400 1703.8217 2400 1708.5705 C
2400 1751.4297 L
2400 1756.1785 2397.5659 1760.0001 2394.5444 1760.0001 C
1805.4556 1760.0001 L
f
*U
0 D
0.781369 0.032807 0.849577 0 0.152941 0.682353 0.380392 Xa
1700 1940.0001 m
1700 1774.3146 1565.6854 1640.0001 1400 1640.0001 C
1400 1640.0001 L
1234.3146 1640.0001 1100 1774.3146 1100 1940.0001 C
1100 1940.0001 L
1100 2105.6855 1234.3145 2240.0001 1399.9999 2240.0001 c
1400 2240.0001 L
1565.6854 2240.0001 1700 2105.6855 1700 1940.0001 C
1700 1940.0001 L
f
1803.0304 2240.0001 m
2130.3032 2240.0001 L
2131.9819 2240.0001 2133.3333 2236.1774 2133.3333 2231.4285 C
2133.3333 2188.5713 L
2133.3333 2183.8229 2131.9819 2180.0001 2130.3032 2180.0001 C
1803.0304 2180.0001 L
1801.3516 2180.0001 1800 2183.8229 1800 2188.5713 C
1800 2231.4285 L
1800 2236.1772 1801.3516 2240.0001 1803.0304 2240.0001 C
f
*u
1 D
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
1805.4556 1280 m
1802.434 1280 1800 1276.1784 1800 1271.4296 C
1800 1228.5704 L
1800 1223.8216 1802.434 1220 1805.4556 1220 C
2394.5444 1220 L
2397.5659 1220 2400 1223.8216 2400 1228.5704 C
2400 1271.4296 L
2400 1276.1784 2397.5659 1280 2394.5444 1280 C
1805.4556 1280 L
f
1805.4556 1200 m
1802.434 1200 1800 1196.1784 1800 1191.4296 C
1800 1148.5704 L
1800 1143.8216 1802.434 1140 1805.4556 1140 C
2394.5444 1140 L
2397.5659 1140 2400 1143.8216 2400 1148.5704 C
2400 1191.4296 L
2400 1196.1784 2397.5659 1200 2394.5444 1200 C
1805.4556 1200 L
f
1805.4556 1120 m
1802.434 1120 1800 1116.1784 1800 1111.4296 C
1800 1068.5704 L
1800 1063.8216 1802.434 1060 1805.4556 1060 C
2394.5444 1060 L
2397.5659 1060 2400 1063.8216 2400 1068.5704 C
2400 1111.4296 L
2400 1116.1784 2397.5659 1120 2394.5444 1120 C
1805.4556 1120 L
f
1805.4556 1040 m
1802.434 1040 1800 1036.1784 1800 1031.4296 C
1800 988.5704 L
1800 983.8216 1802.434 980 1805.4556 980 C
2394.5444 980 L
2397.5659 980 2400 983.8216 2400 988.5704 C
2400 1031.4296 L
2400 1036.1784 2397.5659 1040 2394.5444 1040 C
1805.4556 1040 L
f
1805.4556 960 m
1802.434 960 1800 956.1784 1800 951.4296 C
1800 908.5704 L
1800 903.8216 1802.434 900 1805.4556 900 C
2394.5444 900 L
2397.5659 900 2400 903.8216 2400 908.5704 C
2400 951.4296 L
2400 956.1784 2397.5659 960 2394.5444 960 C
1805.4556 960 L
f
*U
0 D
0.661982 0.285283 0.061982 0 0.333333 0.6 0.784314 Xa
1700 1140 m
1700 974.3146 1565.6854 840 1400 840 c
1234.3146 840 1100 974.3146 1100 1140 c
1100 1305.6855 1234.3146 1440 1400 1440 c
1565.6854 1440 1700 1305.6855 1700 1140 c
f
1803.0304 1440 m
2130.3032 1440 L
2131.9819 1440 2133.3333 1436.1772 2133.3333 1431.4284 C
2133.3333 1388.5712 L
2133.3333 1383.8228 2131.9819 1380 2130.3032 1380 C
1803.0304 1380 L
1801.3516 1380 1800 1383.8228 1800 1388.5712 C
1800 1431.4284 L
1800 1436.1772 1801.3516 1440 1803.0304 1440 C
f
*u
1 D
0 0 0 0 1 1 1 Xa
1295.2272 1271.7568 m
1289.408 1271.7568 1287.3264 1266.4392 1284.724 1261.2164 C
1246.6191 1184.746 L
1241.6188 1188.3682 1234.1902 1190.4666 1226.3512 1190.4712 C
1211.7979 1190.4712 1200 1183.3925 1200 1174.6604 C
1199.9996 1165.9283 1211.7974 1158.8494 1226.3508 1158.8492 c
1226.3512 1158.8492 l
1232.0564 1158.8546 1237.6046 1159.9708 1242.162 1162.03 C
1242.162 1155.8108 L
1242.162 1101.2264 L
1242.162 1071.486 L
1242.162 1065.6468 1246.8632 1060.9456 1252.7028 1060.9456 C
1263.2432 1060.9456 L
1263.2432 1013.5132 L
1263.2432 1010.5932 1265.594 1008.2428 1268.5135 1008.2428 C
1300.1351 1008.2428 L
1303.0552 1008.2428 1305.4055 1010.5932 1305.4055 1013.5132 C
1305.4055 1060.9456 L
1495.1355 1060.9456 L
1495.1355 1013.5132 L
1495.1355 1010.5932 1497.4863 1008.2428 1500.4059 1008.2428 C
1532.0275 1008.2428 L
1534.9475 1008.2428 1537.2979 1010.5932 1537.2979 1013.5132 C
1537.2979 1060.9456 L
1547.8383 1060.9456 L
1553.6779 1060.9456 1558.379 1065.6468 1558.379 1071.486 C
1558.379 1101.2264 L
1558.379 1155.8108 L
1558.379 1164.0188 L
1562.8365 1162.1117 1568.1735 1161.085 1573.6482 1161.0812 C
1588.2017 1161.0812 1599.9996 1168.1599 1599.9998 1176.892 c
1599.9998 1176.892 l
1599.9998 1185.6241 1588.2018 1192.7029 1573.6483 1192.7028 c
1573.6482 1192.7028 L
1565.5775 1192.6963 1557.9569 1190.4711 1552.9686 1186.6644 C
1515.8195 1261.2164 L
1513.217 1266.4392 1511.1355 1271.7568 1505.3159 1271.7568 C
1295.2272 1271.7568 L
f
0 D
1302.89 1261.2164 m
1497.6516 1261.2164 L
1499.4591 1261.2164 1501.1405 1260.2902 1502.1064 1258.7624 C
1502.7596 1257.7288 1503.5065 1256.3316 1504.7233 1253.8956 C
1542.0144 1179.2472 L
1543.3149 1176.6429 1542.2579 1173.4774 1539.6537 1172.1769 C
1538.9221 1171.8116 1538.1156 1171.6215 1537.298 1171.6216 C
1504.0107 1171.6216 L
1504.0107 1171.9736 1504.0508 1172.3224 1504.0508 1172.6756 c
1504.0508 1190.0776 1489.8308 1204.2972 1472.4292 1204.2972 c
1455.0272 1204.2972 1440.8076 1190.0776 1440.8076 1172.6756 c
1440.8076 1172.3236 1440.8076 1171.9724 1440.8477 1171.6216 C
1263.2709 1171.6216 L
1260.3599 1171.6223 1258.0006 1173.9827 1258.0012 1176.8936 C
1258.0015 1177.7106 1258.1915 1178.5163 1258.5565 1179.2472 C
1295.8457 1253.8956 L
1297.0625 1256.3316 1297.809 1257.7288 1298.4622 1258.7624 C
1299.4282 1260.2903 1301.1097 1261.2165 1302.9174 1261.2164 C
1302.89 1261.2164 L
f
1472.416 1193.7568 m
1484.1212 1193.7568 1493.4972 1184.3808 1493.4972 1172.6756 c
1493.4972 1172.3236 1493.4972 1171.9704 1493.4572 1171.6216 C
1451.3484 1171.6216 L
1451.3484 1171.9696 1451.3083 1172.3224 1451.3083 1172.6756 c
1451.3083 1184.3808 1460.6843 1193.7568 1472.3895 1193.7568 C
1472.416 1193.7568 L
f
1294.8652 1118.9188 m
1312.3292 1118.9188 1326.4867 1113.0199 1326.4868 1105.7432 C
1326.4872 1098.4665 1312.33 1092.5674 1294.8658 1092.5672 c
1294.8652 1092.5672 l
1277.401 1092.5672 1263.2434 1098.4661 1263.2433 1105.7428 c
1263.2433 1105.7432 l
1263.2434 1113.02 1277.401 1118.9189 1294.8652 1118.9188 C
f
1505.6764 1118.9188 m
1523.1404 1118.9188 1537.2979 1113.0199 1537.298 1105.7432 C
1537.2983 1098.4665 1523.1411 1092.5674 1505.677 1092.5672 c
1505.6766 1092.5672 1505.6764 1092.5672 v
1488.2122 1092.5673 1474.0547 1098.4662 1474.0548 1105.743 c
1474.0548 1105.7432 l
1474.0549 1113.0199 1488.2124 1118.9188 1505.6764 1118.9188 C
f
1363.3788 1092.5672 m
1437.1628 1092.5672 L
1440.0824 1092.5672 1442.4329 1090.2168 1442.4329 1087.2972 C
1442.4329 1076.7564 L
1442.4329 1073.8368 1440.0825 1071.486 1437.1628 1071.486 C
1363.3789 1071.486 L
1360.4589 1071.486 1358.1085 1073.8368 1358.1085 1076.7564 C
1358.1085 1087.2972 L
1358.1085 1090.2168 1360.4589 1092.5672 1363.3789 1092.5672 C
1363.3788 1092.5672 L
f
*U
*u
1 D
1400 2149.429 m
1383.3333 2132.7622 L
1200 1949.429 L
1216.6667 1932.7621 L
1400 2116.0957 L
1583.3333 1932.762 L
1600 1949.4288 L
1416.6667 2132.7621 L
1400 2149.429 L
f
1400 2108.553 m
1258.5792 1967.1321 L
1258.5792 1778.5714 L
1305.7192 1778.5714 L
1305.7192 1919.9922 L
1381.144 1919.9922 L
1381.144 1778.5714 L
1541.4209 1778.5714 L
1541.4209 1967.1322 L
1400 2108.553 L
f
0 D
1397.6428 2042.4738 m
1397.6428 2007.2018 L
1362.4056 2007.2018 L
1363.5958 2026.1538 1378.6919 2041.2648 1397.6428 2042.4738 C
f
1402.3568 2042.4337 m
1421.309 2041.2437 1436.4202 2026.1476 1437.6292 2007.1965 C
1402.3567 2007.1965 L
1402.3568 2042.4337 L
f
1362.3704 2002.4825 m
1397.6428 2002.4825 L
1397.6428 1967.2449 L
1378.6904 1968.4349 1363.5791 1983.5313 1362.3704 2002.4825 C
f
1402.3568 2002.4825 m
1437.5944 2002.4825 L
1436.4043 1983.5302 1421.308 1968.4189 1402.3568 1967.2101 C
1402.3568 2002.4825 L
f
1418.856 1919.9869 m
1454.2112 1919.9869 L
1454.2112 1884.6317 L
1418.856 1884.6317 L
1418.856 1919.9869 L
f
1458.9252 1919.9869 m
1494.2804 1919.9869 L
1494.2804 1884.6317 L
1458.9252 1884.6317 L
1458.9252 1919.9869 L
f
1418.856 1879.9177 m
1454.2112 1879.9177 L
1454.2112 1844.5624 L
1418.856 1844.5624 L
1418.856 1879.9177 L
f
1458.9252 1879.9177 m
1494.2804 1879.9177 L
1494.2804 1844.5624 L
1458.9252 1844.5624 L
1458.9252 1879.9177 L
f
*U
1 D
1345.4543 2940.0001 m
1335.3816 2940.0001 1327.2727 2931.8909 1327.2727 2921.8181 C
1327.2727 2812.7273 L
1218.1815 2812.7273 L
1208.1091 2812.7273 1199.9999 2804.618 1199.9999 2794.5453 C
1199.9999 2685.4545 L
1199.9999 2675.3817 1208.1091 2667.2728 1218.1815 2667.2728 C
1327.2727 2667.2728 L
1327.2727 2558.1816 L
1327.2727 2548.1089 1335.3815 2540 1345.4543 2540 C
1454.5452 2540 L
1464.6179 2540 1472.7272 2548.1088 1472.7272 2558.1816 C
1472.7272 2667.2728 L
1581.818 2667.2728 L
1591.8907 2667.2728 1600 2675.3816 1600 2685.4545 C
1600 2794.5453 L
1600 2804.618 1591.8907 2812.7273 1581.818 2812.7273 C
1472.7272 2812.7273 L
1472.7272 2921.8181 L
1472.7272 2931.8909 1464.6179 2940.0001 1454.5452 2940.0001 C
1345.4543 2940.0001 L
f
0.152132 0.743496 0.668666 0.023102 0.803922 0.380392 0.333333 Xa
2822.9312 2820.0781 m
2813.2109 2820.1617 2804.2192 2814.9373 2799.4783 2806.4513 C
2697.5605 2629.9146 L
2616.3506 2711.125 L
2606.0105 2721.5627 2589.167 2721.6421 2578.7292 2711.3021 C
2568.2915 2700.962 2568.2122 2684.1184 2578.552 2673.6807 C
2578.6084 2673.6238 2578.6648 2673.5673 2578.7217 2673.511 C
2684.4536 2567.7938 L
2694.8438 2557.406 2711.6877 2557.408 2722.0754 2567.7982 C
2723.717 2569.4402 2725.1367 2571.29 2726.2981 2573.3007 C
2845.553 2779.8514 L
2853.0779 2792.4703 2848.9485 2808.8002 2836.3296 2816.3252 C
2832.2754 2818.7427 2827.6509 2820.0381 2822.9309 2820.0782 C
2822.9312 2820.0781 L
f
*u
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
2551.3359 2880.0001 m
2533.9727 2880.0001 2520 2863.0405 2520 2841.9689 C
2520 2538.0393 L
2520 2516.9673 2533.9729 2500.0001 2551.3359 2500.0001 C
2868.6563 2500.0001 L
2886.019 2500.0001 2899.9998 2516.9673 2899.9998 2538.0393 C
2899.9998 2841.9689 L
2899.9998 2863.0405 2886.019 2880.0001 2868.6563 2880.0001 C
2551.3359 2880.0001 L
f
0 D
2582.4063 2840.0001 m
2837.5859 2840.0001 L
2850.0024 2840.0001 2860 2830.4225 2860 2818.5237 C
2860 2561.4764 L
2860 2549.5776 2850.0024 2540 2837.5859 2540 C
2582.4063 2540 L
2569.9897 2540 2559.9998 2549.5776 2559.9998 2561.4764 C
2559.9998 2818.5237 L
2559.9998 2830.4225 2569.9897 2840.0001 2582.4063 2840.0001 C
f
*U
1 D
0.781369 0.032807 0.849577 0 0.152941 0.682353 0.380392 Xa
2822.9312 2020.0781 m
2813.2112 2020.1617 2804.2192 2014.9373 2799.4783 2006.4514 C
2697.5605 1829.9145 L
2616.3506 1911.1249 L
2606.0105 1921.5626 2589.167 1921.6419 2578.7292 1911.3019 c
2568.2915 1900.962 2568.2122 1884.1183 2578.552 1873.6805 C
2578.6084 1873.6237 2578.6648 1873.5671 2578.7217 1873.5109 C
2684.4536 1767.7936 L
2694.8438 1757.4058 2711.6877 1757.4078 2722.0754 1767.7979 C
2723.717 1769.4399 2725.1367 1771.2899 2726.2981 1773.3004 C
2845.553 1979.8512 L
2853.0779 1992.4701 2848.9485 2008.7999 2836.3296 2016.3249 C
2832.2754 2018.7425 2827.6511 2020.0379 2822.9309 2020.0781 C
2822.9312 2020.0781 L
f
*u
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
2551.3359 2080.0001 m
2533.9727 2080.0001 2520 2063.0405 2520 2041.9689 C
2520 1738.0392 L
2520 1716.9672 2533.9729 1700 2551.3359 1700 C
2868.6563 1700 L
2886.019 1700 2899.9998 1716.9672 2899.9998 1738.0392 C
2899.9998 2041.9689 L
2899.9998 2063.0405 2886.019 2080.0001 2868.6563 2080.0001 C
2551.3359 2080.0001 L
f
0 D
2582.4063 2040.0001 m
2837.5859 2040.0001 L
2850.0024 2040.0001 2860 2030.4225 2860 2018.5237 C
2860 1761.4764 L
2860 1749.5776 2850.0024 1740.0001 2837.5859 1740.0001 C
2582.4063 1740.0001 L
2569.9897 1740.0001 2559.9998 1749.5776 2559.9998 1761.4764 C
2559.9998 2018.5237 L
2559.9998 2030.4225 2569.9897 2040.0001 2582.4063 2040.0001 C
f
*U
1 D
0.661982 0.285283 0.061982 0 0.333333 0.6 0.784314 Xa
2822.9312 1220.078 m
2813.2112 1220.1617 2804.2192 1214.9371 2799.4783 1206.4512 C
2697.5605 1029.9144 L
2616.3506 1111.1248 L
2606.011 1121.5631 2589.1675 1121.6431 2578.7292 1111.3036 C
2568.291 1100.9641 2568.2109 1084.1204 2578.5503 1073.6822 C
2578.6072 1073.6248 2578.6643 1073.5677 2578.7217 1073.5108 C
2684.4536 967.7936 L
2694.8438 957.4058 2711.6877 957.4078 2722.0754 967.798 C
2723.717 969.44 2725.1367 971.2899 2726.2981 973.3004 C
2845.553 1179.8512 L
2853.0779 1192.4702 2848.9485 1208.8 2836.3296 1216.3249 C
2832.2754 1218.7425 2827.6509 1220.0378 2822.9309 1220.078 C
2822.9312 1220.078 L
f
*u
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
2551.3359 1280 m
2533.9727 1280 2520 1263.0404 2520 1241.9688 C
2520 938.0392 L
2520 916.9672 2533.9729 900 2551.3359 900 C
2868.6563 900 L
2886.019 900 2899.9998 916.9672 2899.9998 938.0392 C
2899.9998 1241.9688 L
2899.9998 1263.0404 2886.019 1280 2868.6563 1280 C
2551.3359 1280 L
f
0 D
2582.4063 1240 m
2837.5859 1240 L
2850.0024 1240 2860 1230.4224 2860 1218.5236 C
2860 961.4764 L
2860 949.5776 2850.0024 940 2837.5859 940 C
2582.4063 940 L
2569.99 940 2560 949.5776 2560 961.4764 C
2560 1218.5236 L
2560 1230.4224 2569.99 1240 2582.4065 1240 C
2582.4063 1240 L
f
*U
*u
1 D
0.064149 0.212253 1 0 0.945098 0.768627 0.058824 Xa
2000 3760 m
1917.8282 3760.0027 1849.0139 3697.7598 1840.7968 3616 C
1467.947 3597.0718 1199.9995 3515.1147 1200 3420 C
1200 3300 L
1204.6172 3300 L
1201.6808 3293.7412 1200 3287.0305 1200 3280 c
1200 3246.76 1235.6801 3220 1280 3220 C
2720 3220 L
2764.3201 3220 2800 3246.76 2800 3280 c
2800 3287.0305 2798.3191 3293.7412 2795.3828 3300 C
2800 3300 L
2800 3420 L
2799.6001 3515.05 2531.6646 3596.8992 2159.0547 3615.7969 C
2150.9404 3697.5806 2082.1853 3759.916 2000 3760 C
f
0 D
2000 3680 m
2044.1827 3680 2080 3644.1829 2080 3600 c
2080 3555.8171 2044.1827 3520 2000 3520 c
1955.8173 3520 1920 3555.8171 1920 3600 c
1920 3644.1829 1955.8173 3680 2000 3680 c
f
*U
U
/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 0.000000 3000.000000) XT
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
